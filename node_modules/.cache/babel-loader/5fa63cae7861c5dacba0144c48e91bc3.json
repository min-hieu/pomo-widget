{"ast":null,"code":"var _jsxFileName = \"/Users/charlie/Desktop/pomo-widget/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // 3000 seconds = 50mins\n  const [timer, setTimer] = useState(3000);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer(timer => timer - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"EHuKjkobYvVcE5YGJ3XyjpgoJoU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/charlie/Desktop/pomo-widget/src/App.jsx"],"names":["useState","useEffect","App","timer","setTimer","interval","setInterval","clearInterval"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B;AACA,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBJ,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCF,MAAAA,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAC,CAAhB,CAAR;AACD,KAF2B,EAEzB,IAFyB,CAA5B;AAIA,WAAO,MAAMI,aAAa,CAACF,QAAD,CAA1B;AACD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAA,kBAAOF;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;GAnBuBD,G;;KAAAA,G","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\n\nexport default function App() {\n  // 3000 seconds = 50mins\n  const [ timer, setTimer ] = useState(3000)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer(timer => timer-1);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      <div className=\"main\">\n        <span>{timer}</span>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}